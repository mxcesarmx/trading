#Código para conocer el spread y el oscilador de volatilidad

import yfinance as yf
import numpy as np
import matplotlib.pyplot as plt

# Define the ticker symbol and the period of interest
ticker_symbol = "NQ=F"
start_date = "2023-01-01"
end_date = "2023-07-15"

# Retrieve historical data using yfinance
data = yf.download(ticker_symbol, start=start_date, end=end_date, interval='1d')

# Calculate the difference between High and Low prices
price_difference = data['High'] - data['Low']

# Calculate the ratio of current day's difference to previous day's difference
price_ratio = price_difference / price_difference.shift(1)

# Modify the price difference ratio in logarithmic scale
log_price_ratio = np.log(price_ratio)

# Calculate summary statistics for price difference
mean_price_diff = np.mean(price_difference)
std_price_diff = np.std(price_difference)
min_price_diff = np.min(price_difference)
max_price_diff = np.max(price_difference)

# Plot the price difference
plt.figure(figsize=(10, 6))
plt.plot(price_difference, marker='o')
plt.plot(price_difference)
plt.axhline(mean_price_diff, color='r', linestyle='--', label='Mean')
plt.axhline(mean_price_diff + std_price_diff, color='g', linestyle='--', label='Mean + Std Dev')
plt.axhline(mean_price_diff - std_price_diff, color='g', linestyle='--', label='Mean - Std Dev')
plt.xlabel('Trading Days')
plt.ylabel('Price Difference')
plt.title('Spread')
plt.grid(True)
plt.legend()

# Add summary statistics text for price difference
diff_stats_text = f"Mean: {mean_price_diff:.4f}\nStd Dev: {std_price_diff:.4f}\nMin: {min_price_diff:.4f}\nMax: {max_price_diff:.4f}"
plt.text(0.02, 0.95, diff_stats_text, transform=plt.gca().transAxes, verticalalignment='top')

plt.show()

# Calculate summary statistics for log price difference ratio
mean_log_price_ratio = np.mean(log_price_ratio)
std_log_price_ratio = np.std(log_price_ratio)
min_log_price_ratio = np.min(log_price_ratio)
max_log_price_ratio = np.max(log_price_ratio)

# Plot the log price difference ratio
plt.figure(figsize=(10, 6))
plt.plot(log_price_ratio, marker='o')
plt.axhline(mean_log_price_ratio, color='r', linestyle='--', label='Mean')
plt.axhline(mean_log_price_ratio + std_log_price_ratio, color='g', linestyle='--', label='Mean + Std Dev')
plt.axhline(mean_log_price_ratio - std_log_price_ratio, color='g', linestyle='--', label='Mean - Std Dev')
plt.xlabel('Trading Days')
plt.ylabel('Log Price Difference Ratio')
plt.title('Logarithmic Oscillator')
plt.grid(True)
plt.legend()

# Add summary statistics text for log price difference ratio
log_ratio_stats_text = f"Mean: {mean_log_price_ratio:.4f}\nStd Dev: {std_log_price_ratio:.4f}\nMin: {min_log_price_ratio:.4f}\nMax: {max_log_price_ratio:.4f}"
plt.text(0.02, 0.95, log_ratio_stats_text, transform=plt.gca().transAxes, verticalalignment='top')

plt.show()
